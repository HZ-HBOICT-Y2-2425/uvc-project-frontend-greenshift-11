name: GitHub Actions Pipeline
run-name: ${{ github.actor }} is testing GitHub Actions ðŸš€

on:
  push:
  pull_request:

permissions:
  contents: read
  packages: read
  statuses: write

jobs:
  Build-and-Test:
    runs-on: ubuntu-latest
    name: Build and Test Job

    steps:
      # Step 1: Check out the repository code
      - name: Check out repository code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run the build process
      - name: Build the software
        run: npm run build

      # Step 5: Run unit tests with coverage
      - name: Run unit tests and collect coverage
        run: npm test -- --coverage

      # Step 6: Upload code coverage report
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Add this token in your repository secrets

      # Step 7: Run static code analysis
      - name: Run static analysis with SonarCloud
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Ensure SONAR_TOKEN is set in your repository secrets
        with:
          projectBaseDir: .   # Root directory of the repository
          args: >
            -Dsonar.projectKey=your_project_key
            -Dsonar.organization=your_organization
            -Dsonar.sources=src
            -Dsonar.exclusions=node_modules/**

      # Step 8: Log success message
      - name: Log success message
        if: success()
        run: echo "âœ… Build, tests, and analysis completed successfully!"

  Lint:
    runs-on: ubuntu-latest
    name: Lint Code Base

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Super-Linter
        uses: super-linter/super-linter@v7.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          FILTER_REGEX_INCLUDE: "^src/.*$"
          DEFAULT_BRANCH: main
